cmake_minimum_required(VERSION 3.15)
set(CMAKE_TOOLCHAIN_FILE "$ENV{VCPKG_HOME}/scripts/buildsystems/vcpkg.cmake" CACHE STRING "Vcpkg toolchain file")#v将vcpkg.cmake的路径赋值给CMAKE_TOOLCHAIN_FILE变量。必须在project函数之前设置
#设置-DCMAKE_BUILD_TYPE=Release
set(CMAKE_BUILD_TYPE "Release")
project(cmake_test)
message(STATUS $ENV{VCPKG_HOME})
if(POLICY CMP0146)
    cmake_policy(SET CMP0146 OLD)
endif()
#set(OpenCV_DIR "$ENV{VCPKG_HOME}/installed/x64-windows/share/opencv4")
#set(Qt6_DIR "$ENV{VCPKG_HOME}/installed/x64-windows/share/Qt6")
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_INSTALL_PREFIX ${PROJECT_BINARY_DIR}/install)
find_package(Qt6 REQUIRED)
#message(STATUS "Qt6_DIR: ${Qt6_DIR}")
#message(STATUS "Qt6Core_DIR: ${Qt6Core_DIR}")
#message(STATUS "Qt6Gui_DIR: ${Qt6Gui_DIR}")
#message(STATUS "Qt6Widgets_DIR: ${Qt6Widgets_DIR}")
#message(STATUS "Qt6Core_INCLUDE_DIRS: ${Qt6Core_INCLUDE_DIRS}")
#message(STATUS "Qt6Gui_INCLUDE_DIRS: ${Qt6Gui_INCLUDE_DIRS}")
#message(STATUS "Qt6Widgets_INCLUDE_DIRS: ${Qt6Widgets_INCLUDE_DIRS}")
#message(STATUS "Qt6Core_LIBRARIES: ${Qt6Core_LIBRARIES}")
#message(STATUS "Qt6Gui_LIBRARIES: ${Qt6Gui_LIBRARIES}")
#message(STATUS "Qt6Widgets_LIBRARIES: ${Qt6Widgets_LIBRARIES}")
#message(STATUS "Qt6Core_VERSION: ${Qt6Core_VERSION}")
#message(STATUS "Qt6Gui_VERSION: ${Qt6Gui_VERSION}")
#message(STATUS "Qt6Widgets_VERSION: ${Qt6Widgets_VERSION}")
#message(STATUS "Qt6Core_VERSION_STRING: ${Qt6Core_VERSION_STRING}")
#message(STATUS "Qt6Gui_VERSION_STRING: ${Qt6Gui_VERSION_STRING}")
#message(STATUS "Qt6Widgets_VERSION_STRING: ${Qt6Widgets_VERSION_STRING}")
#message(STATUS "Qt6Core_VERSION_MAJOR: ${Qt6Core_VERSION_MAJOR}")
#message(STATUS "Qt6Gui_VERSION_MAJOR: ${Qt6Gui_VERSION_MAJOR}")
find_package(OpenCV CONFIG REQUIRED)
#include_directories(${OpenCV_INCLUDE_DIRS})
add_executable(cmake_test cvt.cpp)
#set(OpenCV_LIBS opencv_core opencv_imgproc opencv_imgcodecs opencv_highgui)
target_link_libraries(cmake_test PRIVATE ${OpenCV_LIBS})
install(TARGETS cmake_test)
qt_generate_deploy_app_script(
        TARGET cmake_test
        FILENAME_VARIABLE deploy_script
        NO_UNSUPPORTED_PLATFORM_ERROR
)
install(SCRIPT ${deploy_script})